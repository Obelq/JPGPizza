@using JPGPizza.MVC.ViewModels.Orders
@using JPGPizza.MVC.Utility
@model OrderProductsViewModel
@{
    ViewBag.Title = "CarryOut";
}

<h2>CarryOut</h2>
<ul class="nav nav-tabs">
    @foreach (var type in Model.Types)
    {


        <li><a data-toggle="tab" href="#@type">@type</a></li>


    }
</ul>

<div class="tab-content">
    <div id="Pizza" class="tab-pane fade in active">
        @foreach (var product in Model.Products.Where(p => p.Type == JPGPizza.Models.ProductType.Pizza))
        {
            <div class="col-sm-3 col-sm-push-1 acp-product-container grow">
                @{Html.RenderPartial("_Product", product);}
            </div>
            
        }
    </div>
    <div id="Drink" class="tab-pane fade">
        @foreach (var product in Model.Products.Where(p => p.Type == JPGPizza.Models.ProductType.Drink))
        {
            <div class="col-sm-3 col-sm-push-1 acp-product-container grow">
                @{Html.RenderPartial("_Product", product);}
            </div>
                    }
    </div>
    <div id="Salad" class="tab-pane fade">
        @foreach (var product in Model.Products.Where(p => p.Type == JPGPizza.Models.ProductType.Salad))
        {
            <div class="col-sm-3 col-sm-push-1 acp-product-container grow">
                @{Html.RenderPartial("_Product", product);}
            </div>
        }
    </div>
    <div id="Sandwich" class="tab-pane fade">
        @foreach (var product in Model.Products.Where(p => p.Type == JPGPizza.Models.ProductType.Sandwich))
        {
            <div class="col-sm-3 col-sm-push-1 acp-product-container grow">
                @{Html.RenderPartial("_Product", product);}
                
            </div>
                

         }
    </div>
</div>





@section Scripts {
    <script>

        var shoppingCart = []; // { productId: 5, quantity: 5 }

        $(document).ready(function () {
            $('.add-to-cart-btn').click((ev) => {
                
                ev.preventDefault();
                let evTarget = $(ev.currentTarget);
                let productId = ev.currentTarget.getAttribute('data-product-id-value');
                let orderProduct = {
                    productId: productId,
                    quantity: 1
                };

                addOrderProductToCart(orderProduct);
               
                shoppingCart.push(parseInt(productId));
                $('.badge').text(JSON.parse(sessionStorage.getItem('shoppingCart')).length);
            });

            $('.shopping-cart').click((ev) => {
                
                orderList();
            });
        });

        function addOrderProductToCart(orderProduct) {
            let shoppingCart = sessionStorage.getItem('shoppingCart');

            if (!shoppingCart) {
                sessionStorage.setItem('shoppingCart', JSON.stringify([]));
                shoppingCart = sessionStorage.getItem('shoppingCart');
            }

            shoppingCart = JSON.parse(shoppingCart);
            shoppingCart.push(orderProduct);

            sessionStorage.setItem('shoppingCart', JSON.stringify(shoppingCart));
        }

        function removeOrderProductByProductId(productId) {
            let shoppingCart = JSON.parse(sessionStorage.getItem('shoppingCart'));

            let orderProductToRemoveIndex;
            for (let i = 0; i < shoppingCart.length; i++) {
                if (shoppingCart[i].productId === productId) {
                    orderProductToRemoveIndex = i;
                    break;
                }
            }

            shoppingCart.splice(orderProductToRemoveIndex, 1);
            sessionStorage.setItem('shoppingCart', JSON.stringify(shoppingCart));
        }

        function increaseOrderProductQuantity() {

        }

        function orderList() {
            
            let list = JSON.stringify(shoppingCart)
            var controllerUrl = "@Url.Action("ShopingCartList", "Orders")"
            console.log(shoppingCart)
            $.ajax({
                type: "POST",
                url: controllerUrl,
                data: list,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    alert(msg);
                }
            });
           
        }
    </script>

}
