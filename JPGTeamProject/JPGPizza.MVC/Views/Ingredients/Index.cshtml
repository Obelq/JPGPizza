@model JPGPizza.MVC.ViewModels.Ingredients.IngredientsIndexViewModel

@{
    ViewBag.Title = "Index";
}

@{ Html.RenderPartial("_AdministratorsSidebar"); }

<div class="row" style="margin-top: 20px;">
    <div class="col-sm-6 col-sm-push-2 box-shadow-container" style="min-height: 640px;position: relative;">
        <div class="col-sm-12 form-inline" style="margin-bottom: 15px;padding-left: 0;">
            <input class="form-control" style="width: 85%;" type="text" name="searchText" value="@Model.SearchText" id="search-textbox" />
            <a href="#" class="btn btn-default" id="search-btn">Търси</a>
        </div>
        <table class="table table-bordered ingredients-table">
            <tr>
                <th style="width: 70%;">
                    Име
                </th>
                <th style="width: 30%;"></th>
            </tr>

            @foreach (var item in Model.Ingredients)
            {
                <tr class="ingredient-main-row-@item.Id">
                    <td style="width: 70%;"class="ingredient-name">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td style="width: 30%;text-align: center;">
                        <a class="edit-ingredient-link" href="#" data-ingredient-id="@item.Id">Редактирай</a> |
                        <a class="delete-ingredient-link" href="#" data-ingredient-id="@item.Id">Изтрий</a>
                    </td>
                </tr>
                <tr class="ingredient-edit-row-@item.Id" hidden>
                    <td colspan="2">
                        @using (Html.BeginForm("Edit", "Ingredients", FormMethod.Post))
                        {
                            <input class="form-control" type="text" name="Name" value="@item.Name" style="width: 62%;display: inline-block;" />
                            <input type="number" name="Id" value="@item.Id" hidden />
                            <input type="text" name="SearchText" value="@Model.SearchText" hidden />
                            <input type="text" name="CurrentPage" value="@Model.Pager.CurrentPage" hidden />

                            <a href="#" class="btn btn-default btn-secondary cancel-edit-btn" style="font-size: 13px;width:18%;display: inline-block;">Отказ</a>
                            <button type="submit" class="btn btn-default  save-changes-btn" style="font-size: 13px;width:18%;display: inline-block;">Запази</button>
                        }
                    </td>
                </tr>

                <tr class="ingredient-delete-row-@item.Id" hidden>
                    <td colspan="2">
                        @using (Html.BeginForm("Delete", "Ingredients", FormMethod.Post))
                        {
                            <div class="text-center text-danger" style="font-size: 15px; font-weight: 900;">Потвърдете изтриването</div>
                            <input disabled class="form-control" type="text" name="Name" value="@item.Name" style="width: 62%;display: inline-block;" />
                            <input type="number" name="Id" value="@item.Id" hidden />
                            <input type="text" name="SearchText" value="@Model.SearchText" hidden />
                            <input type="text" name="CurrentPage" value="@Model.Pager.CurrentPage" hidden />

                            <a href="#" class="btn btn-default btn-secondary cancel-delete-btn" style="font-size: 13px;width:18%;display: inline-block;">Отказ</a>
                            <button type="submit" class="btn btn-default" style="font-size: 13px;width:18%;display: inline-block;">Потвърди</button>
                        }
                    </td>
                </tr>
            }

        </table>
        <div class="ingredients-pagination-container">
            @{ Html.RenderPartial("_Pagination", Model.Pager); }
        </div>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready((ev) => {
            let searchBtn = $('#search-btn');
            let searchTextField = $('#search-textbox');

            searchBtn.click((ev) => {
                let btn = $(ev.currentTarget);
                let searchText = searchTextField.val().trim();
                let href = `/ingredients?page=1&searchText=${searchTextField.val().trim()}`;

                if (!searchText) {
                    $(ev.currentTarget).attr('href', `/ingredients?page=1`);
                    window.location = $(ev.currentTarget).attr('href');
                } else {
                    $(ev.currentTarget).attr('href', `/ingredients?page=1&searchText=${searchText}`);
                    window.location = $(ev.currentTarget).attr('href');
                }
            });

            searchTextField.keyup((ev) => {
                let code = (ev.keyCode ? ev.keyCode : ev.which);

                if (code == 13) { //Enter keycode
                    searchBtn.click();
                }
            });

            $('.delete-ingredient-link').click((ev) => {
                ev.preventDefault();

                let deleteBtn = $(ev.currentTarget);
                let ingredientId = ev.currentTarget.getAttribute('data-ingredient-id');
                let mainRow = $(`.ingredient-main-row-${ingredientId}`);
                let deleteRow = $(`.ingredient-delete-row-${ingredientId}`);
                let cancelDelete = deleteRow.find('.cancel-delete-btn');

                cancelDelete.unbind('click');
                cancelDelete.click((ev) => {
                    ev.preventDefault();
                    deleteRow.hide();
                    mainRow.show();
                });

                deleteRow.show();
                mainRow.hide();
            });

            $('.edit-ingredient-link').click((ev) => {
                ev.preventDefault();

                let editBtn = $(ev.currentTarget);
                let ingredientId = ev.currentTarget.getAttribute('data-ingredient-id');
                let mainRow = $(`.ingredient-main-row-${ingredientId}`);
                let editRow = $(`.ingredient-edit-row-${ingredientId}`);
                let cancelEditBtn = editRow.find('.cancel-edit-btn');
                let saveChangesBtn = editRow.find('.save-changes-btn');

                let currentIngredientNameTd = mainRow.find('.ingredient-name');
                let newIngredientNameTextbox = editRow.find('input');

                cancelEditBtn.unbind('click');
                cancelEditBtn.click((ev) => {
                    editRow.hide();
                    mainRow.show();
                    newIngredientNameTextbox.val(currentIngredientNameTd.text().trim());
                });

                editRow.show();
                mainRow.hide();

                let strLength = newIngredientNameTextbox.val().length;
                newIngredientNameTextbox.focus();
                newIngredientNameTextbox[0].setSelectionRange(strLength, strLength);
            });
        });
    </script>
}