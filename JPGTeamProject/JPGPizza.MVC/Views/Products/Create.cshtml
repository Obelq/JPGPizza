@model JPGPizza.MVC.ViewModels.Products.CreateProductViewModel

@{
    ViewBag.Title = "Създаване на продукт";
}

@{Html.RenderPartial("_AdministratorsSidebar");}

<div class="row" style="padding-top: 50px;">
    <div class="col-sm-4 col-sm-push-2 box-shadow-container">
        <div class="row">
            <div class="col-sm-12" style="font-size: 20px; font-weight: 700; text-transform: uppercase;color: #d80a2b">
                Създаване на продукт
            </div>
        </div>
        @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", autofocus = "true" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                   @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                   @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Picture, new { @class = "form-control", type = "file", id = "fileupload", required = "true", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row" id="ingredients-container">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ingredients, new { @class = "form-control" })
                    <div class="added-ingredients-container" id="added-ingredients">

                    </div>
                    <div class="add-ingredient-container">
                        <input class="form-control ingredient-name-input" type="text" name="new-ingredient-name" value="" id="new-ingredient-name" />
                        <button class="btn btn-default ingredient-action-btn" id="add-ingredient-btn" type="button">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <a href="/administrators/products" class="btn btn-default btn-secondary">Назад</a>
                    <input type="submit" value="Създай" class="btn btn-default pull-right" />
                </div>
            </div>
        }
    </div>


    @* Pizza, Sandwich, Salad preview container *@
    <div class="col-sm-3 col-sm-push-3 sticky" id="pss-preview-container" hidden>
        <div class="row">
            <div class="col-sm-12" style="font-size: 20px; font-weight: 700; text-transform: uppercase;color: #d80a2b">
                Преглед
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 acp-product-container">
                <div class="acp-product-price-container">
                    <span class="product-price"></span>
                </div>
                <div class="acp-product-img-container dvPreview">
                    <img class="img-responsive acp-product-img" src="~/Content/Images/default_product.png"  alt="Снимка на продукта" />
                </div>
                <div class="acp-product-name">

                </div>
                <div class="acp-product-ingredients">

                </div>  
                <div class="acp-product-actions">

                </div>
            </div>
        </div>
    </div>

    @* Drink preview container *@
    <div class="col-sm-3 col-sm-push-2 sticky" id="drink-preview-container" hidden>
        <div class="row">
            <div class="col-sm-12" style="font-size: 20px; font-weight: 700; text-transform: uppercase;color: #d80a2b">
                Преглед
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 acp-product-container">
                <div class="acp-product-price-container">
                    <span class="product-price"></span>
                </div>
                <div class="acp-product-img-container dvPreview">
                    <img class="img-responsive acp-product-img" src="~/Content/Images/default_product.png" alt="Снимка на продукта" />
                </div>
                <div class="acp-product-name">

                </div>
                <div class="acp-product-actions">

                </div>
            </div>
        </div>
    </div>

</div>
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Administrators/create-product.js"></script>
    <script type="text/javascript" src="~/Scripts/Administrators/productFilePreview.js"></script>
    <script>
        let ingredinetCount = 0;
        let addedIngredientNames = [];
        let addIngredientBtn;
        let newIngredientNameTextbox;
        let addedIngredientsContainer;
        let ingredientsContainer;

        $(document).ready(() => {
            let createProductForm = new CreateProductForm();
            addIngredientBtn = $('#add-ingredient-btn');
            newIngredientNameTextbox = $('#new-ingredient-name');
            addedIngredientsContainer = $('#added-ingredients');
            ingredientsContainer = $('#ingredients-container');
        });
    </script>
}
